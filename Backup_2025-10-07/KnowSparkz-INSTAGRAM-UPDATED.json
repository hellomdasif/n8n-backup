{
  "createdAt": "2025-09-07T20:00:11.015Z",
  "updatedAt": "2025-09-08T02:23:12.000Z",
  "id": "T7aXw8XDMolsobUX",
  "name": "KnowSparkz-INSTAGRAM-UPDATED",
  "active": false,
  "isArchived": true,
  "nodes": [
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "GOOGLE_DRIVE_FOLDER_ID",
              "value": "1KHv4wZAzt_OaWETkhzbxz37fF27VOkmN"
            },
            {
              "name": "GOOGLE_SHEET_ID",
              "value": "14EzuQ_35iuNhdVzKnIBcW6uL5vGsCvKwRfL9oVXtsmE"
            },
            {
              "name": "SHEET_NAME",
              "value": "0"
            },
            {
              "name": "FILES_DIR",
              "value": "=/upload/{{ $json.UNAME }}"
            },
            {
              "name": "FILES_URL",
              "value": "https://files.mohdasif.net/reactsaga/"
            }
          ]
        },
        "options": {}
      },
      "id": "866569d6-e843-4f9d-90c8-e8b01154a0fa",
      "name": "Set Config5",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -2304,
        64
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1FxLvtVpL7_qK7dhnxUbHLNao2a6FpukAnMlUkGmozF4",
          "mode": "list",
          "cachedResultName": "KnowSparkz-Youtube",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FxLvtVpL7_qK7dhnxUbHLNao2a6FpukAnMlUkGmozF4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FxLvtVpL7_qK7dhnxUbHLNao2a6FpukAnMlUkGmozF4/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "DirectUrl": "={{ $json.DirectUrl }}"
          },
          "matchingColumns": [
            "DirectUrl"
          ],
          "schema": [
            {
              "id": "DirectUrl",
              "displayName": "DirectUrl",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "82ebfb6a-31d2-4f28-b92f-c2a7a2f45d3b",
      "name": "Google Sheets — AppendOrUpdate (ensure rows)4",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        -1168,
        64
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "H3U1X4hjIcv7PxVl",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1FxLvtVpL7_qK7dhnxUbHLNao2a6FpukAnMlUkGmozF4",
          "mode": "list",
          "cachedResultName": "KnowSparkz-Youtube",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FxLvtVpL7_qK7dhnxUbHLNao2a6FpukAnMlUkGmozF4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FxLvtVpL7_qK7dhnxUbHLNao2a6FpukAnMlUkGmozF4/edit#gid=0"
        },
        "options": {}
      },
      "id": "6c3e44c2-306e-45c2-b4ba-e6791c7993b9",
      "name": "Google Sheets — Read Rows4",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        -896,
        64
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "H3U1X4hjIcv7PxVl",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Select One To Process (fixed)\n// Mode: Run Once for All Items\nconst rows = $input.all().map(i => i.json || {});\n\n// helper: safe access to other nodes\nfunction safeNodeFirstValue(nodeName) {\n  try {\n    if (typeof $node === 'undefined') return null;\n    const n = $node[nodeName];\n    if (!n) return null;\n    const first = (typeof n.first === 'function') ? n.first() : (n.items && n.items[0]);\n    return first && first.json ? first.json : null;\n  } catch (err) {\n    return null;\n  }\n}\n\n// statuses that mean \"already processed\" (do NOT pick)\nconst SKIP_STATUSES = new Set([\n  'PUBLISHED',\n  'DOWNLOADED',\n  'PROCESSING',\n  'ERROR',\n  'CANCELLED'\n]);\n\nfunction isAvailable(row) {\n  if (!row) return false;\n\n  // If you have a boolean 'published' column, respect it\n  if (row.published === true || String(row.published).toLowerCase() === 'true') return false;\n\n  const s = row.status;\n  if (s === undefined || s === null) return true;\n  if (typeof s === 'string') {\n    const t = s.trim().toUpperCase();\n    if (t === '') return true;            // blank = available\n    if (SKIP_STATUSES.has(t)) return false; // skip known processed states\n    // treat all other strings as available (you can tighten this list if needed)\n    return true;\n  }\n  // non-string status -> treat falsy as available\n  return !s;\n}\n\n// debug info (optional)\nconst debug = {\n  rowsCount: rows.length,\n  sampleRows: rows.slice(0,5),\n  SetConfig5_first: safeNodeFirstValue('Set Config5'),\n};\nconsole.log('Select One To Process - debug:', debug);\n\n// pick first available row\nlet chosen = rows.find(isAvailable) || null;\n\nif (!chosen) {\n  return [{\n    json: {\n      debug: 'NO_ROW_SELECTED',\n      reason: 'no rows matched the availability criteria',\n      rowsCount: debug.rowsCount,\n      sampleRows: debug.sampleRows\n    }\n  }];\n}\n\n// resolve filename (fallbacks kept from your original)\nlet filename = (chosen.filename || chosen.original_name || '').toString().trim();\nif (!filename) {\n  const code3First = safeNodeFirstValue('Code3');\n  if (code3First && code3First.filename) filename = String(code3First.filename).trim();\n}\n\n// files dir fallback from Set Config5\nlet filesDir = '/files';\nconst setCfg = safeNodeFirstValue('Set Config5');\nif (setCfg && setCfg.FILES_DIR) {\n  const trimmed = String(setCfg.FILES_DIR).trim();\n  if (trimmed) filesDir = trimmed;\n}\n\nconst baseDir = (filesDir || '/files').replace(/\\/+$/, '') || '/files';\nconst local_path = filename ? `${baseDir}/${filename}` : `${baseDir}/`;\n\n// mark chosen as processing so subsequent runs don't pick it\nchosen.local_path = local_path;\nchosen.status = 'PROCESSING';\n\nreturn [{ json: chosen }];\n"
      },
      "id": "a1ff6c19-739b-4bc6-af9b-737bcb30f0bb",
      "name": "Select One To Process4",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -672,
        64
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "IG_USER_ID",
              "value": "17841454629202811"
            },
            {
              "name": "IG_ACCESS_TOKEN",
              "value": "EAAZAD11ycW5IBPV1rV8L7ZBbRkCO1eSuetnxe68A2AyEqZCgMq8XLuOK5UgNZAzcxZBjzZA1mugbPEAIkZAus6slHugD355ESkJCIJOVU2E7KXxjg1tjZCCdaR4sazaGbpbNDpTAkmieMJTRQsm471ZBI7d7vdumx3w4hz4kZCSwuA2ZAGJpgZBXMaEkXZCHoMsxf"
            },
            {
              "name": "DirectUrl",
              "value": "={{ $json.DirectUrl }}"
            },
            {
              "name": "CAPTION",
              "value": ".#🎂要怎麼不經意的讓另一一半看到這篇文👀 儀式感滿滿🈵🔜蛋糕小熊蠟燭旋轉褸盒🕯️ 嘿~閉上眼睛～許個願吧✨ 希望你的願望會實現 （偷偷按下機關）有我幫你準備的小驚喜唷 ⚠️ 商品是蛋糕小熊機關盒 沒有附戒指💍禮物要自己準備唷 流行周邊好物推薦搜尋 ✨ 玩具公仔搜尋🔍 寵物周邊搜尋 🔍 勗新商品資訊請看限時動態精選💭 下單方式🛒 🔜留言”+1；小編火速回覆你下單資訊 🔜留言”+1； 小編火速回覆你下單資訊 可自行截圖商品私訊購買‼️ 付款方式 台灣地📦匯款、ATM轉帳（可無摺）、街口支付 支持全球順豐配送🌍微信、支付寶收款 國外配送約2週左右 因天氣、不可控因素可能延誤 能接受再下單🗳️可詢問客服配送進度."
            }
          ]
        },
        "options": {}
      },
      "id": "6dfa8380-d574-4218-bc41-bb579ef4dc30",
      "name": "Set Config1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -448,
        64
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 30,55 7,13,19 * * *"
            }
          ]
        }
      },
      "id": "8632d51d-787e-498d-a2c6-288fbe754cc4",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [
        -1408,
        32
      ]
    },
    {
      "parameters": {
        "protocol": "sftp",
        "operation": "list",
        "path": "={{ $json.FILES_DIR }}"
      },
      "type": "n8n-nodes-base.ftp",
      "typeVersion": 1,
      "position": [
        -2016,
        64
      ],
      "id": "344a3272-8ac8-49ca-8a0a-16ebb02779e0",
      "name": "FTP",
      "credentials": {
        "sftp": {
          "id": "C8w0MijZfYD2NPtq",
          "name": "SFTP"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// GetFileLinks (Function) - normalizes input from SFTP list node\nconst out = [];\n\nfor (const item of $input.all()) {\n  const rawName = item.json.name || item.json.filename || '';\n  const name = rawName.replace(/\\r?\\n/g, '').trim();\n\n  const path = item.json.path || `/upload/${name}`;\n  const fileid = name;            // unique id per file (your filename)\n  const filename = name;\n  const remote_path = path;\n  const created_at = item.json.modifyTime || new Date().toISOString();\n  const size = item.json.size || null;\n\n  out.push({\n    json: {\n      fileid,\n      original_name: name,\n      filename,\n      remote_path,\n      created_at,\n      size\n      // keep minimal; BuildRowObjectForExcel will build the DirectUrl and status\n    }\n  });\n}\n\nreturn out;\n"
      },
      "id": "4534c329-d5be-4b95-ad52-0c20e561064c",
      "name": "getFileLinks",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -1696,
        64
      ]
    },
    {
      "parameters": {
        "jsCode": "// Collect output rows here\nconst output = [];\n\n// Loop over all incoming items\nfor (let i = 0; i < items.length; i++) {\n  const item = items[i];        // <-- define `item`\n  const data = item.json || {}; // actual JSON payload\n\n  // Read UNAME: prefer the current item, else fallback to Set Config5 node\n  // Note: replace \"Set Config5\" with your node name if different\n  const uname =\n    (data.UNAME && String(data.UNAME).trim()) ||\n    ($node && $node[\"Set Config5\"] && $node[\"Set Config5\"].json && $node[\"Set Config5\"].json.UNAME) ||\n    '';\n\n  // Read file fields safely\n  const fileid = data.fileid || data.filename || '';\n  const filename = data.filename || fileid || '';\n  const encodedFilename = encodeURIComponent(filename || '');\n\n  // Build the direct URL & remote path using uname\n  const direct_url = `https://files.mohdasif.net/${uname}/${encodedFilename}`;\n  const remote_path = data.remote_path || `/upload/${uname}/${filename}`;\n\n  // Compose the row object — keys should match your Excel/Sheet column headers\n  const row = {\n    fileid,\n    original_name: filename,\n    DirectUrl: direct_url,\n    remote_path,\n    created_at: data.created_at || new Date().toISOString(),\n    size: data.size || null,\n    status: data.status || 'unknown',\n    published: data.published || false\n  };\n\n  // Push as a proper n8n return item\n  output.push({ json: row });\n}\n\n// Return the final array of items\nreturn output;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1456,
        256
      ],
      "id": "ae7308bb-069a-4c23-9884-72298494cc60",
      "name": "BuildRowObjectForExcel"
    },
    {
      "parameters": {
        "jsCode": "return [{\n  json: {\n    DirectUrl: $items('Select One To Process4')[0]?.json?.DirectUrl || $json.DirectUrl || null,\n    status: 'PUBLISHED',\n    published_meta: { when: new Date().toISOString() }\n  }\n}];"
      },
      "id": "6655d4f6-6fef-4749-9bcf-e590904f1aad",
      "name": "Prepare Publish Update",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        288,
        352
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1FxLvtVpL7_qK7dhnxUbHLNao2a6FpukAnMlUkGmozF4",
          "mode": "list",
          "cachedResultName": "KnowSparkz-Youtube",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FxLvtVpL7_qK7dhnxUbHLNao2a6FpukAnMlUkGmozF4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FxLvtVpL7_qK7dhnxUbHLNao2a6FpukAnMlUkGmozF4/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "DirectUrl": "={{ $json.DirectUrl }}",
            "status": "={{ $json.status }}"
          },
          "matchingColumns": [
            "DirectUrl"
          ],
          "schema": [
            {
              "id": "DirectUrl",
              "displayName": "DirectUrl",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "c008cbc2-811a-4820-9810-60a29e753c72",
      "name": "Update Sheet — SetStatus",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        688,
        512
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "H3U1X4hjIcv7PxVl",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return [{\n  json: {\n    creation_id: $item(0).$node['IG Create Container1'].json.id,\n    attempts: 0,\n    max_attempts: 5,\n    sleep_sec: 6\n  }\n}];\n"
      },
      "id": "99610208-d42c-4d87-86ae-354968d53d57",
      "name": "Init Poll Vars",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -32,
        64
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{'https://graph.facebook.com/v21.0/' + $json.IG_USER_ID + '/media'}}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "facebookGraphApi",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "media_type",
              "value": "REELS"
            },
            {
              "name": "video_url",
              "value": "={{ $json.DirectUrl }}"
            },
            {
              "name": "caption",
              "value": "={{$json.CAPTION}}"
            },
            {
              "name": "access_token",
              "value": "={{$json.IG_ACCESS_TOKEN}}"
            }
          ]
        },
        "options": {}
      },
      "id": "94541623-2252-4471-9f4b-fe9e57357ffd",
      "name": "IG Create Container1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        -240,
        64
      ],
      "credentials": {
        "facebookGraphApi": {
          "id": "CmDYlZ89za45GZVg",
          "name": "reactsaga"
        }
      }
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "UNAME",
              "value": "KnowSparkz"
            }
          ]
        },
        "options": {}
      },
      "id": "bd7f8d85-2bb1-4c96-8476-116a1a0cbf9c",
      "name": "USERNAME",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -2496,
        64
      ]
    }
  ],
  "connections": {
    "Set Config5": {
      "main": [
        [
          {
            "node": "FTP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets — AppendOrUpdate (ensure rows)4": {
      "main": [
        [
          {
            "node": "Google Sheets — Read Rows4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets — Read Rows4": {
      "main": [
        [
          {
            "node": "Select One To Process4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select One To Process4": {
      "main": [
        [
          {
            "node": "Set Config1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Config1": {
      "main": [
        [
          {
            "node": "IG Create Container1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "USERNAME",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "FTP": {
      "main": [
        [
          {
            "node": "getFileLinks",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "getFileLinks": {
      "main": [
        [
          {
            "node": "BuildRowObjectForExcel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "BuildRowObjectForExcel": {
      "main": [
        [
          {
            "node": "Google Sheets — AppendOrUpdate (ensure rows)4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Publish Update": {
      "main": [
        [
          {
            "node": "Update Sheet — SetStatus",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Init Poll Vars": {
      "main": [
        [
          {
            "node": "Prepare Publish Update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IG Create Container1": {
      "main": [
        [
          {
            "node": "Init Poll Vars",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "USERNAME": {
      "main": [
        [
          {
            "node": "Set Config5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "meta": null,
  "pinData": {},
  "versionId": "bc759ab2-b251-46a9-9d8d-bbdfa88cccac",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-09-07T20:00:11.020Z",
      "updatedAt": "2025-09-07T20:00:11.020Z",
      "role": "workflow:owner",
      "workflowId": "T7aXw8XDMolsobUX",
      "projectId": "COQIBF46Vn0bg2e3"
    }
  ],
  "tags": []
}