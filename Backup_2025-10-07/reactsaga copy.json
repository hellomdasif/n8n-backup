{
  "createdAt": "2025-09-06T16:59:16.020Z",
  "updatedAt": "2025-09-07T02:11:43.000Z",
  "id": "LN3c2ZCNomcHLdG0",
  "name": "reactsaga copy",
  "active": false,
  "isArchived": true,
  "nodes": [
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "GOOGLE_DRIVE_FOLDER_ID",
              "value": "1KHv4wZAzt_OaWETkhzbxz37fF27VOkmN"
            },
            {
              "name": "GOOGLE_SHEET_ID",
              "value": "14EzuQ_35iuNhdVzKnIBcW6uL5vGsCvKwRfL9oVXtsmE"
            },
            {
              "name": "SHEET_NAME",
              "value": "0"
            },
            {
              "name": "FILES_DIR",
              "value": "/files"
            },
            {
              "name": "FILES_URL",
              "value": "https://files.mohdasif.net"
            }
          ]
        },
        "options": {}
      },
      "id": "f1b6e147-7d62-488e-9dac-00de1c618499",
      "name": "Set Config5",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -1184,
        -1184
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "14EzuQ_35iuNhdVzKnIBcW6uL5vGsCvKwRfL9oVXtsmE",
          "mode": "list",
          "cachedResultName": "pCloud_Instagram_Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/14EzuQ_35iuNhdVzKnIBcW6uL5vGsCvKwRfL9oVXtsmE/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/14EzuQ_35iuNhdVzKnIBcW6uL5vGsCvKwRfL9oVXtsmE/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "DirectUrl": "={{ $json.DirectUrl }}"
          },
          "matchingColumns": [
            "DirectUrl"
          ],
          "schema": [
            {
              "id": "DirectUrl",
              "displayName": "DirectUrl",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "71301737-0172-4e02-960b-6645139132a3",
      "name": "Google Sheets — AppendOrUpdate (ensure rows)4",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        -48,
        -1184
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "H3U1X4hjIcv7PxVl",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "14EzuQ_35iuNhdVzKnIBcW6uL5vGsCvKwRfL9oVXtsmE",
          "mode": "list",
          "cachedResultName": "pCloud_Instagram_Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/14EzuQ_35iuNhdVzKnIBcW6uL5vGsCvKwRfL9oVXtsmE/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/14EzuQ_35iuNhdVzKnIBcW6uL5vGsCvKwRfL9oVXtsmE/edit#gid=0"
        },
        "options": {}
      },
      "id": "41b146b3-0b55-494d-903e-1654d024af67",
      "name": "Google Sheets — Read Rows4",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        224,
        -1184
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "H3U1X4hjIcv7PxVl",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Debug-friendly Function node — choose one row that is NOT DOWNLOADED and prepare for processing\n// Mode: Run Once for All Items\nconst rows = $input.all().map(i => i.json || {});\n\n// helper: safe access to other nodes (returns null if node missing)\nfunction safeNodeFirstValue(nodeName) {\n  try {\n    if (typeof $node === 'undefined') return null;\n    const n = $node[nodeName];\n    if (!n) return null;\n    // n.first() is available when node executed; fallback to items array\n    const first = (typeof n.first === 'function') ? n.first() : (n.items && n.items[0]);\n    return first && first.json ? first.json : null;\n  } catch (err) {\n    return null;\n  }\n}\n\n// helper: is not-downloaded?\nfunction isNotDownloaded(r) {\n  if (!r) return false;\n  const s = r.status;\n  if (s === undefined || s === null) return true;\n  if (typeof s === 'string') {\n    const t = s.trim().toUpperCase();\n    if (t === '') return true;            // blank = not downloaded\n    if (t === 'DOWNLOADED') return false;\n    if (t === 'PROCESSING') return false; // skip processing\n    return true; // any other text treat as not-downloaded\n  }\n  // non-string status -> treat falsy as not downloaded\n  return !s;\n}\n\n// debug info\nconst debug = {\n  rowsCount: rows.length,\n  sampleRows: rows.slice(0, 5),\n  foundNodeNames: Object.keys(typeof $node !== 'undefined' ? $node : {}),\n  Code3_first: safeNodeFirstValue('Code3'),\n  SetConfig5_first: safeNodeFirstValue('Set Config5'),\n};\n\nconsole.log('Select One To Process - debug:', debug);\n\n// pick\nlet chosen = rows.find(isNotDownloaded) || null;\n\nif (!chosen) {\n  // Return diagnostic so the editor shows why nothing was selected\n  return [{\n    json: {\n      debug: 'NO_ROW_SELECTED',\n      reason: 'no rows matched the not-downloaded criteria',\n      rowsCount: debug.rowsCount,\n      sampleRows: debug.sampleRows,\n      nodesSeen: debug.foundNodeNames,\n      Code3_first: debug.Code3_first,\n      SetConfig5_first: debug.SetConfig5_first\n    }\n  }];\n}\n\n// resolve filename from chosen or fallback to Code3\nlet filename = (chosen.filename || chosen.original_name || '').toString().trim();\nif (!filename) {\n  const code3First = safeNodeFirstValue('Code3');\n  if (code3First && code3First.filename) filename = String(code3First.filename).trim();\n}\n\n// files dir fallback\nlet filesDir = '/files';\nconst setCfg = safeNodeFirstValue('Set Config5');\nif (setCfg && setCfg.FILES_DIR) {\n  const trimmed = String(setCfg.FILES_DIR).trim();\n  if (trimmed) filesDir = trimmed;\n}\n\n// build local_path\nconst baseDir = (filesDir || '/files').replace(/\\/+$/, '') || '/files';\nconst local_path = filename ? `${baseDir}/${filename}` : `${baseDir}/`;\n\n// attach and return\nchosen.local_path = local_path;\nchosen.status = 'PROCESSING';\n\nreturn [{ json: chosen }];\n"
      },
      "id": "f369fc7f-b6bf-4600-a221-597ebb5a155b",
      "name": "Select One To Process4",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        448,
        -1184
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "IG_USER_ID",
              "value": "17841454629202811"
            },
            {
              "name": "IG_ACCESS_TOKEN",
              "value": "EAAZAD11ycW5IBPV1rV8L7ZBbRkCO1eSuetnxe68A2AyEqZCgMq8XLuOK5UgNZAzcxZBjzZA1mugbPEAIkZAus6slHugD355ESkJCIJOVU2E7KXxjg1tjZCCdaR4sazaGbpbNDpTAkmieMJTRQsm471ZBI7d7vdumx3w4hz4kZCSwuA2ZAGJpgZBXMaEkXZCHoMsxf"
            },
            {
              "name": "DirectUrl",
              "value": "={{ $json.DirectUrl }}"
            },
            {
              "name": "CAPTION",
              "value": ".#🎂要怎麼不經意的讓另一一半看到這篇文👀 儀式感滿滿🈵🔜蛋糕小熊蠟燭旋轉褸盒🕯️ 嘿~閉上眼睛～許個願吧✨ 希望你的願望會實現 （偷偷按下機關）有我幫你準備的小驚喜唷 ⚠️ 商品是蛋糕小熊機關盒 沒有附戒指💍禮物要自己準備唷 流行周邊好物推薦搜尋 ✨ 玩具公仔搜尋🔍 寵物周邊搜尋 🔍 勗新商品資訊請看限時動態精選💭 下單方式🛒 🔜留言”+1；小編火速回覆你下單資訊 🔜留言”+1； 小編火速回覆你下單資訊 可自行截圖商品私訊購買‼️ 付款方式 台灣地📦匯款、ATM轉帳（可無摺）、街口支付 支持全球順豐配送🌍微信、支付寶收款 國外配送約2週左右 因天氣、不可控因素可能延誤 能接受再下單🗳️可詢問客服配送進度."
            }
          ]
        },
        "options": {}
      },
      "id": "2672331d-5646-48f9-a2a4-980856d59625",
      "name": "Set Config1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        672,
        -1184
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{'https://graph.facebook.com/v21.0/' + $json.IG_USER_ID + '/media'}}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "facebookGraphApi",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "media_type",
              "value": "REELS"
            },
            {
              "name": "video_url",
              "value": "={{ $json.DirectUrl }}"
            },
            {
              "name": "caption",
              "value": "={{$json.CAPTION}}"
            },
            {
              "name": "access_token",
              "value": "={{$json.IG_ACCESS_TOKEN}}"
            }
          ]
        },
        "options": {}
      },
      "id": "4fca5464-aeb3-4157-b43e-8f11598ccd53",
      "name": "IG Create Container1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        880,
        -1184
      ],
      "credentials": {
        "facebookGraphApi": {
          "id": "CmDYlZ89za45GZVg",
          "name": "reactsaga"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return [{\n  json: {\n    creation_id: $item(0).$node['IG Create Container1'].json.id,\n    attempts: 0,\n    max_attempts: 20,\n    sleep_sec: 6\n  }\n}];\n"
      },
      "id": "1c138fde-8adc-4086-b7dc-03f0815d6214",
      "name": "Init Poll Vars1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1088,
        -1184
      ]
    },
    {
      "parameters": {
        "url": "={{ 'https://graph.facebook.com/v21.0/' + $items('Init Poll Vars1')[0].json.creation_id }}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "fields",
              "value": "status_code,status"
            },
            {
              "name": "access_token",
              "value": "={{$items('Set Config1')[0].json.IG_ACCESS_TOKEN}}"
            }
          ]
        },
        "options": {}
      },
      "id": "bb8f22fe-a36d-4970-bbd7-76eaa5bca64d",
      "name": "IG Check Status1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        -1184,
        -400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "da04b258-3bd1-45b4-8dca-ce86ec95b04b",
              "leftValue": "={{$json.status_code}}",
              "rightValue": "FINISHED",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0188fd06-e844-44ef-8970-1f86b9c55556",
      "name": "IF Finished?1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -448,
        -400
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{'https://graph.facebook.com/v21.0/' + $items('Set Config1')[0].json.IG_USER_ID + '/media_publish'}}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "facebookGraphApi",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "creation_id",
              "value": "={{$items('Init Poll Vars1')[0].json.creation_id}}"
            },
            {
              "name": "access_token",
              "value": "={{$items('Set Config1')[0].json.IG_ACCESS_TOKEN}}"
            }
          ]
        },
        "options": {}
      },
      "id": "95c8cc0e-dd7b-4438-afff-4432f1f9eea6",
      "name": "IG Publish1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        -96,
        -416
      ],
      "credentials": {
        "facebookGraphApi": {
          "id": "4qua9PnedvSfPjwM",
          "name": "Facebook Graph account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "={{$json.status_code}}",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "469a9882-a7a3-48ac-b5fc-f377c8d0ae48",
              "leftValue": "={{$json.status_code}}",
              "rightValue": "ERROR",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "082772d2-5fab-44e5-b831-cf59e1622530",
      "name": "IF Error?1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        624,
        -208
      ]
    },
    {
      "parameters": {
        "jsCode": "/* Increment attempts from persistent Init Poll Vars so creation_id is preserved */\nconst prev = $items('Init Poll Vars1')[0].json || {};\nreturn [{\n  json: {\n    creation_id: prev.creation_id,\n    attempts: (prev.attempts || 0) + 1,\n    max_attempts: prev.max_attempts || 20,\n    sleep_sec: prev.sleep_sec || 6\n  }\n}];"
      },
      "id": "8b59750b-c1d1-42af-bcdd-3bdea7cce380",
      "name": "Inc Attempts1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -80,
        -224
      ]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$json.attempts}}",
              "operation": "smaller",
              "value2": "={{$json.max_attempts}}"
            }
          ]
        },
        "options": {}
      },
      "id": "9702f741-8a39-4080-b057-555ed6a7d26b",
      "name": "IF More Polls?1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        336,
        -512
      ]
    },
    {
      "parameters": {
        "unit": "minutes"
      },
      "id": "8261c7b6-97b0-4fc2-941a-cf3d4f3cee86",
      "name": "Wait (loop)1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        512,
        -864
      ],
      "webhookId": "d7226860-4cf1-4eb6-9c39-0de7a724880c"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 15,20,25,30,35,40,45,50,55 19 * * *"
            },
            {
              "field": "cronExpression",
              "expression": "0 0 20 * * *"
            }
          ]
        }
      },
      "id": "bb0471fc-607d-46b5-aec3-36609308f923",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [
        -1504,
        -1184
      ]
    },
    {
      "parameters": {
        "protocol": "sftp",
        "operation": "list",
        "path": "/upload"
      },
      "type": "n8n-nodes-base.ftp",
      "typeVersion": 1,
      "position": [
        -896,
        -1184
      ],
      "id": "eb404422-ee0b-4b43-adc3-f04e187b3699",
      "name": "FTP",
      "credentials": {
        "sftp": {
          "id": "C8w0MijZfYD2NPtq",
          "name": "SFTP"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// GetFileLinks (Function) - normalizes input from SFTP list node\nconst out = [];\n\nfor (const item of $input.all()) {\n  const rawName = item.json.name || item.json.filename || '';\n  const name = rawName.replace(/\\r?\\n/g, '').trim();\n\n  const path = item.json.path || `/upload/${name}`;\n  const fileid = name;            // unique id per file (your filename)\n  const filename = name;\n  const remote_path = path;\n  const created_at = item.json.modifyTime || new Date().toISOString();\n  const size = item.json.size || null;\n\n  out.push({\n    json: {\n      fileid,\n      original_name: name,\n      filename,\n      remote_path,\n      created_at,\n      size\n      // keep minimal; BuildRowObjectForExcel will build the DirectUrl and status\n    }\n  });\n}\n\nreturn out;\n"
      },
      "id": "82fed35a-b994-4ce8-abc3-d137d350fd1a",
      "name": "getFileLinks",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -576,
        -1184
      ]
    },
    {
      "parameters": {
        "jsCode": "// BuildRowObjectForExcel (Function)\n// Input: items from GetFileLinks node (each item has .json.fileid, .json.filename, .json.remote_path, etc.)\nconst out = [];\n\nfor (const item of $input.all()) {\n  const fileid = item.json.fileid || item.json.filename || '';\n  const filename = item.json.filename || fileid || '';\n  const remote_path = item.json.remote_path || `/upload/${filename}`;\n\n  // create the DirectUrl exactly as you specified:\n  // direct url will be https://files.mohdasif.net/<filename>\n  // URL-encode the filename to be safe\n  const encodedFilename = encodeURIComponent(filename);\n  const direct_url = `https://files.mohdasif.net/${encodedFilename}`;\n\n  // Compose the row object with the exact Excel column names\n  // Make sure your Google Sheets / Excel node column headers match these keys:\n  const row = {\n    fileid,             // unique id — use this for lookups / dedupe\n    original_name: filename,\n    DirectUrl: direct_url,\n    remote_path,\n    created_at: item.json.created_at || new Date().toISOString(),\n    size: item.json.size || null,\n    status: '',         // initialization blank\n    published: false    // optional helper column (false = not published)\n  };\n\n  // If your sheet expects a specific order / exact header names, adjust keys accordingly.\n  out.push({ json: row });\n}\n\nreturn out;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -288,
        -1184
      ],
      "id": "95fff263-b495-4dcc-b24e-f8e927e64a75",
      "name": "BuildRowObjectForExcel"
    }
  ],
  "connections": {
    "Set Config5": {
      "main": [
        [
          {
            "node": "FTP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets — AppendOrUpdate (ensure rows)4": {
      "main": [
        [
          {
            "node": "Google Sheets — Read Rows4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets — Read Rows4": {
      "main": [
        [
          {
            "node": "Select One To Process4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select One To Process4": {
      "main": [
        [
          {
            "node": "Set Config1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Config1": {
      "main": [
        [
          {
            "node": "IG Create Container1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IG Create Container1": {
      "main": [
        [
          {
            "node": "Init Poll Vars1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Init Poll Vars1": {
      "main": [
        [
          {
            "node": "IG Check Status1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IG Check Status1": {
      "main": [
        [
          {
            "node": "IF Finished?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Finished?1": {
      "main": [
        [
          {
            "node": "IG Publish1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Inc Attempts1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inc Attempts1": {
      "main": [
        [
          {
            "node": "IF More Polls?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF More Polls?1": {
      "main": [
        [
          {
            "node": "Wait (loop)1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "IF Error?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait (loop)1": {
      "main": [
        [
          {
            "node": "IG Check Status1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        []
      ]
    },
    "FTP": {
      "main": [
        [
          {
            "node": "getFileLinks",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "getFileLinks": {
      "main": [
        [
          {
            "node": "BuildRowObjectForExcel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "BuildRowObjectForExcel": {
      "main": [
        [
          {
            "node": "Google Sheets — AppendOrUpdate (ensure rows)4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "19f2f85f-63a2-4957-a16b-27eb93d76972",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-09-06T16:59:16.024Z",
      "updatedAt": "2025-09-06T16:59:16.024Z",
      "role": "workflow:owner",
      "workflowId": "LN3c2ZCNomcHLdG0",
      "projectId": "COQIBF46Vn0bg2e3"
    }
  ],
  "tags": []
}